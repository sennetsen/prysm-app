import React from 'react';

// Import custom file icons
const AudioIcon = () => (
  <svg width="20" height="20" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fillRule="evenodd" clipRule="evenodd" d="M24 0C10.7452 0 0 10.7452 0 24V176C0 189.255 10.7452 200 24 200H176C189.255 200 200 189.255 200 176V24C200 10.7452 189.255 0 176 0H24ZM140.971 50.0762C143 49.7623 145.071 50.4318 146.557 51.8336C148.042 53.2563 148.795 55.2648 148.649 57.2943L142.54 121.881L142.527 122.055C142.469 122.852 142.412 123.632 142.372 124.412C141.849 133.2 134.569 140.167 125.657 140.167C116.285 140.167 108.732 132.488 108.92 123.073C109.109 114.035 116.577 106.712 125.615 106.691C127.352 106.691 129.004 106.942 130.573 107.424L133.502 75.5593L90.2174 81.9196L85.6149 131.756C85.5312 132.572 85.4894 133.367 85.4475 134.183C84.9663 142.991 77.665 150 68.7319 150C59.2549 150 51.598 142.112 52.0164 132.53C52.3929 123.868 59.4432 116.859 68.1043 116.546C69.9872 116.483 71.8073 116.734 73.5228 117.236L78.3763 64.4496C78.6483 61.3741 81.0123 58.8844 84.0667 58.445L140.971 50.0762Z" fill="#00BECA"/>
  </svg>
);

const ImageIcon = () => (
  <svg width="20" height="20" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fillRule="evenodd" clipRule="evenodd" d="M24 0C10.7452 0 0 10.7452 0 24V176C0 189.255 10.7452 200 24 200H176C189.255 200 200 189.255 200 176V24C200 10.7452 189.255 0 176 0H24ZM73.4253 120.511C77.3202 125.708 81.2243 130.916 84.3838 130.916C90.3214 130.916 96.886 121.148 103.596 111.165C112.734 97.5667 122.142 83.5686 130.6 93.3088C135.918 99.4364 141.399 112.847 146.227 124.66C147.909 128.774 149.511 132.695 151 136.047V140.8C151 146.441 146.441 151 140.8 151H59.2C56.4948 151 53.9004 149.925 51.9875 148.012C50.0746 146.1 49 143.505 49 140.8V137.444C50.9327 133.111 52.9016 128.234 54.6849 123.817C56.4404 119.469 58.016 115.566 59.2 113.066C62.5485 106 67.9778 113.244 73.4253 120.511ZM79.6 64.3C79.6 72.7558 72.7558 79.6 64.3 79.6C55.8442 79.6 49 72.7558 49 64.3C49 55.8442 55.8442 49 64.3 49C72.7558 49 79.6 55.8442 79.6 64.3Z" fill="#FF3093"/>
  </svg>
);

const PdfIcon = () => (
  <svg width="20" height="20" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fillRule="evenodd" clipRule="evenodd" d="M24 0C10.7452 0 0 10.7452 0 24V176C0 189.255 10.7452 200 24 200H176C189.255 200 200 189.255 200 176V24C200 10.7452 189.255 0 176 0H24ZM36.7509 126.166C37.5629 126.722 38.9078 127 40.7855 127C42.6633 127 44.0082 126.722 44.8201 126.166C45.6321 125.61 46.1396 124.902 46.3427 124.043C46.5457 123.133 46.6472 122.198 46.6472 121.238V111.307H56.3912C58.5227 111.307 60.6796 110.928 62.8618 110.169C65.0441 109.361 67.0487 108.198 68.8757 106.682C70.7535 105.115 72.2506 103.169 73.3671 100.844C74.5344 98.5193 75.118 95.8154 75.118 92.7323C75.118 89.5986 74.5344 86.8694 73.3671 84.5444C72.2506 82.2195 70.7535 80.2736 68.8757 78.7068C67.0487 77.0894 65.0441 75.9017 62.8618 75.1436C60.7303 74.3854 58.5988 74.0063 56.4673 74.0063H40.8616C38.9839 74.0063 37.639 74.2843 36.827 74.8403C36.015 75.3962 35.5075 76.1291 35.3045 77.0389C35.1015 77.8981 35 78.8079 35 79.7681V121.162C35 122.123 35.1015 123.058 35.3045 123.967C35.5075 124.877 35.9896 125.61 36.7509 126.166ZM56.4673 99.783H46.6472V85.53H56.3912C57.8122 85.53 59.0555 85.8333 60.1213 86.4398C61.2378 87.0463 62.1006 87.8802 62.7096 88.9416C63.3186 90.003 63.6231 91.2413 63.6231 92.6564C63.6231 94.3243 63.2424 95.689 62.4812 96.7504C61.7707 97.8118 60.8572 98.5952 59.7407 99.1006C58.6749 99.5555 57.5838 99.783 56.4673 99.783ZM81.8688 126.166C82.6808 126.722 83.9749 127 85.7512 127H99.3015C103.057 127 106.508 126.318 109.654 124.953C112.852 123.588 115.643 121.718 118.028 119.343C120.414 116.917 122.266 114.086 123.585 110.852C124.905 107.566 125.565 104.029 125.565 100.238C125.565 96.4977 124.905 93.0355 123.585 89.8514C122.266 86.6672 120.414 83.8873 118.028 81.5118C115.643 79.1364 112.877 77.2916 109.731 75.9775C106.584 74.6634 103.184 74.0063 99.5298 74.0063H85.8273C83.9495 73.9557 82.6047 74.2085 81.7927 74.7645C80.9807 75.3204 80.4731 76.0533 80.2701 76.9631C80.0671 77.8223 79.9656 78.7321 79.9656 79.6923V121.162C79.9656 122.173 80.0925 123.133 80.3463 124.043C80.6 124.902 81.1075 125.61 81.8688 126.166ZM99.5298 115.401H91.5367V85.53H99.4537C102.245 85.53 104.732 86.187 106.914 87.5012C109.096 88.7647 110.822 90.5337 112.091 92.8081C113.359 95.0825 113.994 97.6602 113.994 100.541C113.994 103.422 113.359 105.974 112.091 108.198C110.822 110.422 109.096 112.191 106.914 113.505C104.732 114.769 102.27 115.401 99.5298 115.401ZM133.328 126.242C134.14 126.747 135.46 127 137.287 127C139.215 127 140.56 126.747 141.322 126.242C142.134 125.686 142.641 124.978 142.844 124.119C143.047 123.209 143.149 122.274 143.149 121.314V105.317H158.678C159.744 105.317 160.657 105.242 161.419 105.09C162.231 104.938 162.865 104.534 163.322 103.877C163.779 103.169 164.007 102.007 164.007 100.389C164.007 98.7216 163.779 97.5338 163.322 96.8262C162.865 96.1186 162.231 95.689 161.419 95.5374C160.657 95.3857 159.769 95.3099 158.754 95.3099H143.149V85.53H158.138C159.153 85.53 160.092 85.4542 160.955 85.3026C161.869 85.1003 162.604 84.595 163.163 83.7863C163.721 82.9776 164 81.6635 164 79.844C164 77.9233 163.721 76.5587 163.163 75.7501C162.655 74.9413 161.97 74.4612 161.107 74.3096C160.245 74.1074 159.306 74.0063 158.291 74.0063H137.515C135.282 74.0063 133.734 74.4106 132.872 75.2194C132.009 76.028 131.578 77.5443 131.578 79.7681V121.238C131.578 122.198 131.654 123.133 131.806 124.043C132.009 124.953 132.516 125.686 133.328 126.242Z" fill="#EA3434"/>
  </svg>
);

const VideoIcon = () => (
  <svg width="20" height="20" viewBox="0 0 200 200" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fillRule="evenodd" clipRule="evenodd" d="M24 0C10.7452 0 0 10.7452 0 24V176C0 189.255 10.7452 200 24 200H176C189.255 200 200 189.255 200 176V24C200 10.7452 189.255 0 176 0H24ZM59.9622 149.005C61.9471 150 62.9396 150 64.9245 150C66.9094 150 67.9018 150 69.8867 149.005L139.358 109.204C142.335 107.214 144.32 104.229 144.32 100.249C144.32 96.2687 142.335 93.2836 139.358 91.2935L69.8867 51.4925C66.9094 49.5025 62.9396 49.5025 59.9622 51.4925C56.9849 53.4826 55 56.4677 55 60.4478V140.05C55 144.03 56.9849 147.015 59.9622 149.005ZM114.547 100.249L74.849 123.134V77.3632L114.547 100.249Z" fill="#844FDA"/>
  </svg>
);

// Generic file icon for other file types (using Ant Design icon as SVG)
const GenericFileIcon = () => (
  <svg width="20" height="20" viewBox="0 0 1024 1024" fill="currentColor">
    <path d="M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0 0 42 42h216v494z"/>
  </svg>
);

/**
 * Gets the appropriate file icon component based on file type
 * @param {string} fileType - The MIME type of the file (e.g., 'image/jpeg', 'application/pdf')
 * @param {string} fileName - The name of the file (fallback for extension checking)
 * @returns {React.Component} - The appropriate icon component
 */
export function getFileIcon(fileType, fileName = '') {
  // Normalize inputs
  const mimeType = fileType?.toLowerCase() || '';
  const extension = fileName?.toLowerCase().split('.').pop() || '';

  // Audio files
  if (mimeType.startsWith('audio/') || 
      ['mp3', 'wav', 'ogg', 'flac', 'aac', 'm4a', 'wma'].includes(extension)) {
    return <AudioIcon />;
  }

  // Video files
  if (mimeType.startsWith('video/') || 
      ['mp4', 'avi', 'mov', 'wmv', 'flv', 'webm', 'mkv', '3gp'].includes(extension)) {
    return <VideoIcon />;
  }

  // PDF files
  if (mimeType === 'application/pdf' || extension === 'pdf') {
    return <PdfIcon />;
  }

  // Image files (though these are usually displayed as previews, this is for consistency)
  if (mimeType.startsWith('image/') || 
      ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'ico'].includes(extension)) {
    return <ImageIcon />;
  }

  // Default file icon for other types
  return <GenericFileIcon />;
}

/**
 * Gets the file type category for styling or additional logic
 * @param {string} fileType - The MIME type of the file
 * @param {string} fileName - The name of the file
 * @returns {string} - The file category ('audio', 'video', 'pdf', 'image', 'other')
 */
export function getFileCategory(fileType, fileName = '') {
  const mimeType = fileType?.toLowerCase() || '';
  const extension = fileName?.toLowerCase().split('.').pop() || '';

  if (mimeType.startsWith('audio/') || 
      ['mp3', 'wav', 'ogg', 'flac', 'aac', 'm4a', 'wma'].includes(extension)) {
    return 'audio';
  }

  if (mimeType.startsWith('video/') || 
      ['mp4', 'avi', 'mov', 'wmv', 'flv', 'webm', 'mkv', '3gp'].includes(extension)) {
    return 'video';
  }

  if (mimeType === 'application/pdf' || extension === 'pdf') {
    return 'pdf';
  }

  if (mimeType.startsWith('image/') || 
      ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp', 'svg', 'ico'].includes(extension)) {
    return 'image';
  }

  return 'other';
}